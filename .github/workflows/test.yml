name: pytest docker compose

on:
    push:
      branches: [ main, chore/setup-cicd ]
    pull_request:
      branches: [ main ]

jobs:
  test:
    if: github.actor == github.repository_owner
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Generate .env file
        run: |
          echo "MYSQL_ROOT_PW=${{ secrets.MYSQL_ROOT_PW }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PW=${{ secrets.DB_PW }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT || '3306' }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DEEPL_AUTH_KEY=${{ secrets.DEEPL_AUTH_KEY }}" >> .env
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env

      - name: Build and run containers
        run: |
          docker buildx build \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache \
            --target fastapi \
            --tag fastapi_server:latest \
            --load \
            -f Dockerfile \
            .

          docker compose up -d

      - name: Wait for DB to be ready
        run: sleep 20

      - name: Run tests inside fastapi container
        run: docker exec fastapi_server pytest --cov=. --cov-report=term-missing

      - name: Generate HTML coverage report
        run: |
          docker exec fastapi_server pytest --cov=. --cov-report=html
          docker cp fastapi_server:/app/htmlcov ./htmlcov

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: htmlcov

      - name: Tear down
        if: always()
        run: docker compose --env-file /dev/null down